{
  "version": 3,
  "sources": ["../../../app/routes/icon-display.tsx", "../../../app/utils/ui-utils.ts"],
  "sourcesContent": ["import type {\n  LinksFunction,\n  LoaderArgs,\n  V2_MetaFunction } from\n\"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Outlet, useSearchParams } from \"@remix-run/react\";\nimport style from \"../style/icon-display.css\";\nimport { setCssCustomProperty } from \"~/utils/ui-utils\";\n\nexport const links: LinksFunction = () => [\n{\n  rel: \"stylesheet\",\n  href: style\n}];\n\n\nexport const loader = async ({ request }: LoaderArgs) => {\n  return json(null);\n};\n\nexport const meta: V2_MetaFunction = () => {\n  return [{ title: \"SMS Campaign\" }];\n};\n\nconst SetGridSizeButton = ({\n  label,\n  size\n\n\n\n}: {label: string;size: number;}) => {\n  function handleClick() {\n    setCssCustomProperty(\"--gridSize\", `${size}px`);\n  }\n\n  return (\n    <button className=\"btn-default\" type=\"button\" onClick={handleClick}>\n      {label}\n    </button>);\n\n};\n\nexport default function IconDisplay() {\n  const [searchParams] = useSearchParams();\n  const filter = searchParams.get(\"filter\");\n  return (\n    <div className=\"icon-container\">\n      <nav>\n        <SetGridSizeButton label=\"S\" size={40}></SetGridSizeButton>\n        <SetGridSizeButton label=\"M\" size={100}></SetGridSizeButton>\n        <SetGridSizeButton label=\"L\" size={250}></SetGridSizeButton>\n        <SetGridSizeButton label=\"XL\" size={400}></SetGridSizeButton>\n        <SetGridSizeButton label=\"FULL\" size={40000}></SetGridSizeButton>\n      </nav>\n      <div className=\"icon-display\">\n        <Outlet context={{ filter }}></Outlet>\n      </div>\n    </div>);\n\n}", "export function setCssCustomProperty(property: string, value: string) {\n  const cssRoot = document.querySelector(\":root\") as HTMLElement;\n  if (cssRoot) {\n    cssRoot.style.setProperty(property, value);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAKA,kBAAqB;;;ACLd,SAAS,qBAAqB,UAAkB,OAAe;AACpE,QAAM,UAAU,SAAS,cAAc,OAAO;AAC9C,MAAI,SAAS;AACX,YAAQ,MAAM,YAAY,UAAU,KAAK;AAAA,EAC3C;AACF;;;ADgCI;AA3BG,IAAM,QAAuB,MAAM;AAAA,EAC1C;AAAA,IACE,KAAK;AAAA,IACL,MAAM;AAAA,EACR;AAAC;AAOM,IAAM,OAAwB,MAAM;AACzC,SAAO,CAAC,EAAE,OAAO,eAAe,CAAC;AACnC;AAEA,IAAM,oBAAoB,CAAC;AAAA,EACzB;AAAA,EACA;AAIF,MAAqC;AACnC,WAAS,cAAc;AACrB,yBAAqB,cAAc,GAAG,QAAQ;AAAA,EAChD;AAEA,SACE,mDAAC,YAAO,WAAU,eAAc,MAAK,UAAS,SAAS,aACpD,mBADH;AAAA;AAAA;AAAA;AAAA,SAEA;AAEJ;AAEe,SAAR,cAA+B;AACpC,QAAM,CAAC,YAAY,IAAI,gBAAgB;AACvC,QAAM,SAAS,aAAa,IAAI,QAAQ;AACxC,SACE,mDAAC,SAAI,WAAU,kBACb;AAAA,uDAAC,SACC;AAAA,yDAAC,qBAAkB,OAAM,KAAI,MAAM,MAAnC;AAAA;AAAA;AAAA;AAAA,aAAuC;AAAA,MACvC,mDAAC,qBAAkB,OAAM,KAAI,MAAM,OAAnC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,qBAAkB,OAAM,KAAI,MAAM,OAAnC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,mDAAC,qBAAkB,OAAM,MAAK,MAAM,OAApC;AAAA;AAAA;AAAA;AAAA,aAAyC;AAAA,MACzC,mDAAC,qBAAkB,OAAM,QAAO,MAAM,OAAtC;AAAA;AAAA;AAAA;AAAA,aAA6C;AAAA,SAL/C;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACA,mDAAC,SAAI,WAAU,gBACb,6DAAC,UAAO,SAAS,EAAE,OAAO,KAA1B;AAAA;AAAA;AAAA;AAAA,WAA6B,KAD/B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAVF;AAAA;AAAA;AAAA;AAAA,SAWA;AAEJ;",
  "names": []
}
